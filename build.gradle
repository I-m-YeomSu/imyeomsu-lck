plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'jacoco'
	id 'com.github.kt3k.coveralls' version '2.12.2'
	id 'maven-publish'
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	maven{ url 'https://jitpack.io' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
	ignoreFailures = true
}

jacocoTestReport {
	reports {
		dependsOn test
		reports {
			html.required = true
			xml.required = true
		}

		// QueryDSL QDomain 제외시키기
		def QDomains = []

		for (qPattern in '**/QA'..'**/QZ') {
			QDomains.add(qPattern + '*')
		}
		afterEvaluate {
			classDirectories.setFrom(
					// 그 외의 매칭되는 클래스도 제외 대상
					files(classDirectories.files.collect {
						fileTree(dir: it, excludes: [
								"co.kirikiri.domain.**.**",
								"**/*Application*",
								"**/*Config*",
								"**/*Dto*",
								"**/*Request*",
								"**/*Response*",
								"**/*Interceptor*",
								"**/*Exception*"
						] + QDomains)
					})
			)
		}
	}
}

coveralls {
	jacocoReportPath 'build/customJacocoReportDir/test/jacocoTestReport.xml'
}

dependencies {
	//custom common utils
	implementation 'com.github.I-m-YeomSu:imyeomsu-lck-common-utils:0.1.2'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'



	// https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'

	//implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'

	compileOnly 'org.projectlombok:lombok'
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	//testImplementation 'org.springframework.security:spring-security-test'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// querydsl
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	// logback 설정
	// https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.3'
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-core
	implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.3'
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'
	// https://mvnrepository.com/artifact/ch.qos.logback.contrib/logback-json-classic
	implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
	// https://mvnrepository.com/artifact/ch.qos.logback.contrib/logback-jackson
	implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'


}
// querydsl generated 경로 설정
def querydslDir = "build/generated/querydsl"

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

clean {
	delete file(querydslDir)
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()

	finalizedBy jacocoTestReport

}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

